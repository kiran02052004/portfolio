{
    
    "locales": {
      "en": {
        "title": "Projects",
        "title_long_prefix": "Take a look at",
        "title_long": "My **Projects**"
      },
      "mr": {
        "title": "प्रकल्प",
        "title_long_prefix": "एक नजर टाका",
        "title_long": "माझे **प्रकल्प**"
      },
      "hi": {
        "title": "प्रोजेक्ट्स",
        "title_long_prefix": "एक नज़र डालें",
        "title_long": "मेरे **प्रोजेक्ट्स**"
      }
    },

    "articles": [
      {
        "id": "portfolio",
        "component": "ArticlePortfolio",
        "config": {},
        "locales": {},
        "categories": [
          {
            "id": "apps",
            "locales": {
              "en": { "singular": "App", "plural": "Apps" },
              "mr": { "singular": "अनुप्रयोग", "plural": "अनुप्रयोग" },
              "hi": { "singular": "ऐप", "plural": "ऐप्स" }
            }
          },
          {
            "id": "utilities",
            "locales": {
              "en": { "singular": "Utility", "plural": "Utilities" },
              "mr": { "singular": "उपयुक्तता", "plural": "उपयुक्तता" },
              "hi": { "singular": "उपयोगिता", "plural": "उपयोगिताएं" }
            }
          }
        ],
        "items": [
          {
            "categoryId": "apps",
            "icon": {
              "img": "images/pictures/weather.jpg",
              "fa": null,
              "faColors": { "bg": "#ffffff", "fill": "#00aaff" }
            },
            "links": [
              { "faIcon": "fa-brands fa-github", "href": "https://github.com/kiran02052004/weatherApp.git" }
            ],
            "media": {
              "youtubeVideo": "",
              "screenshots": { "aspectRatio": null, "images": [] }
            },
            "locales": {
              "en": {
                "title": "Weather App",
                "text": "Built a responsive <b>weather app</b> using the <b>MERN stack</b> that fetches real-time data from OpenWeatherMap API. Includes RESTful backend with Node.js & Express, MongoDB for storage, and a React frontend with Axios integration.",
                "tags": ["MERN", "Weather", "API"]
              },
              "mr": {
                "title": "हवामान अनुप्रयोग",
                "text": "<b>OpenWeatherMap API</b> वापरून हवामानाचा डेटा मिळवणारा प्रतिसादक्षम <b>MERN स्टॅक</b> वापरून तयार केलेला अ‍ॅप. Node.js आणि Express सह RESTful बॅकएंड, MongoDB मध्ये डेटा संग्रहण आणि React सह फ्रंटएंड डिझाइन.",
                "tags": ["MERN", "हवामान", "API"]
              },
              "hi": {
                "title": "मौसम ऐप",
                "text": "<b>MERN स्टैक</b> का उपयोग कर एक <b>रिस्पॉन्सिव मौसम ऐप</b> बनाया जो OpenWeatherMap API से वास्तविक समय डेटा प्राप्त करता है। Node.js और Express के साथ RESTful बैकएंड, MongoDB और React + Axios का फ्रंटएंड उपयोग किया गया।",
                "tags": ["MERN", "मौसम", "API"]
              }
            }
          },
          {
            "categoryId": "utilities",
            "icon": {
              "img": "images/pictures/spam.jpeg",
              "fa": "",
              "faColors": { "bg": null, "fill": null }
            },
            "links": [
              { "faIcon": "fa-brands fa-github", "href": "https://github.com" }
            ],
            "media": {
              "youtubeVideo": "",
              "screenshots": { "aspectRatio": null, "images": [] }
            },
            "locales": {
              "en": {
                "title": "Spam Review Classifier",
                "text": "Developed a <b>machine learning</b> model in Python using Scikit-learn and TensorFlow to classify spam movie reviews. Applied NLP preprocessing with NLTK, feature extraction using pandas, and visualization using matplotlib and seaborn.",
                "tags": ["ML", "NLP", "Spam Detection"]
              },
              "mr": {
                "title": "स्पॅम पुनरावलोकन वर्गीकरण",
                "text": "<b>Python</b> मध्ये <b>मशीन लर्निंग</b> मॉडेल तयार केले, ज्याने स्पॅम चित्रपट पुनरावलोकन वर्गीकृत केले. NLTK सह NLP प्रक्रिया, pandas वापरून फीचर एक्स्ट्रॅक्शन, matplotlib आणि seaborn सह व्हिज्युअलायझेशन.",
                "tags": ["ML", "NLP", "स्पॅम शोध"]
              },
              "hi": {
                "title": "स्पैम रिव्यू क्लासिफायर",
                "text": "<b>Python</b> में <b>मशीन लर्निंग</b> मॉडल बनाया जो स्पैम मूवी रिव्यू का वर्गीकरण करता है। NLTK से NLP प्रोसेसिंग, pandas से फीचर एक्सट्रैक्शन और matplotlib व seaborn से परिणामों का विज़ुअलाइज़ेशन किया।",
                "tags": ["ML", "NLP", "स्पैम डिटेक्शन"]
              }
            }
          },

          {
            "categoryId": "utilities",
            "icon": {
              "img": "images/pictures/fuel.jpg",
              "fa": "",
              "faColors": { "bg": null, "fill": null }
            },
            "links": [
              { "faIcon": "fa-brands fa-github", "href": "https://github.com/kiran02052004/Fule_Indeed_System.git" }
            ],
            "media": {
              "youtubeVideo": "",
              "screenshots": { "aspectRatio": null, "images": [] }
            },
            "locales": {
              "en": {
                "title": "Fuel Indeed System",
                "text": "Developed a comprehensive <b>Java-based fuel station management system</b> using <b>JDBC</b> and <b>MySQL</b>. It supports <b>CRUD operations</b> for users, inventory, and transactions. Key modules include fuel inventory tracking, billing, transaction logging, and user role management. Integrated with SQL for real-time database operations and applied OOP principles for modular design.",
                "tags": ["Java", "JDBC", "SQL"]
              },
              "mr": {
                "title": "फ्युएल इंडीड प्रणाली",
                "text": "<b>Java</b>, <b>JDBC</b>, आणि <b>MySQL</b> वापरून तयार केलेली इंधन स्टेशन व्यवस्थापन प्रणाली. CRUD ऑपरेशन्ससह युजर, इंधन साठा आणि व्यवहार व्यवस्थापन. इन्व्हेंटरी ट्रॅकिंग, बिलिंग सिस्टम, व्यवहार लॉगिंग, आणि युजर मॅनेजमेंट समाविष्ट आहे. SQL द्वारे थेट डेटाबेस संचालनासाठी एकत्रीकरण केलेले.",
                "tags": ["Java", "JDBC", "SQL"]
              },
              "hi": {
                "title": "फ्यूल इंडीड सिस्टम",
                "text": "<b>Java</b>, <b>JDBC</b>, और <b>MySQL</b> का उपयोग करके विकसित किया गया एक फ्यूल स्टेशन प्रबंधन सिस्टम। इसमें <b>CRUD</b> ऑपरेशंस, उपयोगकर्ता प्रबंधन, इन्वेंट्री ट्रैकिंग, बिलिंग और लेनदेन मॉड्यूल शामिल हैं। SQL के साथ रीयल-टाइम कनेक्टिविटी और OOP के सिद्धांतों का पालन किया गया है।",
                "tags": ["Java", "JDBC", "SQL"]
              }
            }
          },
          {
  "categoryId": "utilities",
  "icon": {
    "img": "images/pictures/codecollab.jpg",
    "fa": "",
    "faColors": { "bg": null, "fill": null }
  },
  "links": [
    { "faIcon": "fa-brands fa-github", "href": "https://github.com/kiran02052004/CodeCollab.git" }
  ],
  "media": {
    "youtubeVideo": "",
    "screenshots": { "aspectRatio": null, "images": [] }
  },
  "locales": {
    "en": {
      "title": "Code Collab - AI-Powered Real-time Code Editor",
      "text": "Built an <b>online collaborative code editor</b> using <b>MERN stack</b>, <b>Socket.IO</b>, and <b>OpenAI API</b>. Integrated <b>Monaco Editor</b> for syntax highlighting, multi-language support, and smooth editing. Added an <b>AI assistant</b> to explain, debug, and optimize code in real time. Designed a <b>responsive UI</b> with React, Tailwind CSS, and Vite, and secured sessions using <b>JWT authentication</b>.",
      "tags": ["MERN", "Socket.IO", "OpenAI API", "React", "Tailwind"]
    },
    "mr": {
      "title": "कोड कोलॅब - एआय समर्थित रिअल-टाइम कोड एडिटर",
      "text": "<b>MERN स्टॅक</b>, <b>Socket.IO</b>, आणि <b>OpenAI API</b> वापरून तयार केलेला <b>ऑनलाइन सहकार्यात्मक कोड एडिटर</b>. <b>Monaco Editor</b> द्वारे सिंटॅक्स हायलाइटिंग, मल्टी-लँग्वेज सपोर्ट आणि स्मूथ एडिटिंग प्रदान केले. <b>AI असिस्टंट</b> कोड समजावणे, डिबग करणे आणि ऑप्टिमाइझ करण्यासाठी समाविष्ट केले. React, Tailwind CSS आणि Vite वापरून प्रतिसादक्षम UI डिझाइन केला आणि <b>JWT authentication</b> द्वारे सुरक्षित केले.",
      "tags": ["MERN", "Socket.IO", "OpenAI API", "React", "Tailwind"]
    },
    "hi": {
      "title": "कोड कोलैब - एआई-संचालित रीयल-टाइम कोड एडिटर",
      "text": "<b>MERN स्टैक</b>, <b>Socket.IO</b> और <b>OpenAI API</b> का उपयोग करके विकसित एक <b>ऑनलाइन सहयोगात्मक कोड एडिटर</b>। <b>Monaco Editor</b> को सिंटैक्स हाइलाइटिंग, मल्टी-लैंग्वेज सपोर्ट और स्मूथ एडिटिंग के लिए इंटीग्रेट किया। <b>AI असिस्टेंट</b> कोड को समझाने, डिबग करने और ऑप्टिमाइज़ करने के लिए लागू किया। React, Tailwind CSS और Vite का उपयोग करके रेस्पॉन्सिव UI बनाया और <b>JWT authentication</b> के साथ सुरक्षित किया।",
      "tags": ["MERN", "Socket.IO", "OpenAI API", "React", "Tailwind"]
    }
  }
},
{
  "categoryId": "utilities",
  "icon": {
    "img": "images/pictures/medical-pharmacy.jpg",
    "fa": "",
    "faColors": { "bg": null, "fill": null }
  },
  "links": [
    { "faIcon": "fa-brands fa-github", "href": "https://github.com/kiran02052004/PharmacyManagementSystem.git" }
  ],
  "media": {
    "youtubeVideo": "",
    "screenshots": { "aspectRatio": null, "images": [] }
  },
  "locales": {
    "en": {
      "title": "Pharmacy Management System",
      "text": "Developed a <b>Java Servlet, JSP, and JDBC</b>-based system with <b>MySQL database</b> for pharmacy operations. Implemented pharmacist, supplier, and admin portals with <b>role-based access control</b>. Automated inventory management, supplier records, and billing processes, improving efficiency by 40%. Ensured secure login and smooth data handling with JDBC integration.",
      "tags": ["Java", "Servlet", "JSP", "JDBC", "MySQL"]
    },
    "mr": {
      "title": "फार्मसी व्यवस्थापन प्रणाली",
      "text": "<b>Java Servlet, JSP, JDBC</b> आणि <b>MySQL डेटाबेस</b> वापरून फार्मसी ऑपरेशन्ससाठी प्रणाली विकसित केली. फार्मासिस्ट, सप्लायर आणि अॅडमिन पोर्टल्स <b>भूमिकेवर आधारित प्रवेश नियंत्रणासह</b> लागू केले. इन्व्हेंटरी मॅनेजमेंट, सप्लायर रेकॉर्ड्स आणि बिलिंग प्रक्रिया स्वयंचलित करून कार्यक्षमता 40% ने वाढवली. सुरक्षित लॉगिन आणि JDBC इंटिग्रेशनद्वारे स्मूथ डेटा हँडलिंग सुनिश्चित केले.",
      "tags": ["Java", "Servlet", "JSP", "JDBC", "MySQL"]
    },
    "hi": {
      "title": "फार्मेसी प्रबंधन प्रणाली",
      "text": "<b>Java Servlet, JSP, JDBC</b> और <b>MySQL डेटाबेस</b> का उपयोग करके फार्मेसी संचालन के लिए एक प्रणाली विकसित की। फार्मासिस्ट, सप्लायर और एडमिन पोर्टल्स को <b>भूमिका-आधारित एक्सेस कंट्रोल</b> के साथ लागू किया। इन्वेंटरी मैनेजमेंट, सप्लायर रिकॉर्ड्स और बिलिंग प्रक्रियाओं को स्वचालित करके दक्षता में 40% सुधार किया। JDBC इंटीग्रेशन और सुरक्षित लॉगिन के साथ सुचारू डेटा हैंडलिंग सुनिश्चित की।",
      "tags": ["Java", "Servlet", "JSP", "JDBC", "MySQL"]
    }
  }
}


          
        ]
      }
    ]
  }
  
